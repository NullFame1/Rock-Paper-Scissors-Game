<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Rock Paper Scissors Game</title>
</head>
<body>
  <h1 align="center">Rock Paper Scissors Game</h1>
  <p align="center">Bet Amount: <span id="betAmount"></span> ETH</p>
  <p align="center">Choose your option:</p>
  <div align="center">
    <button onclick="playGame(0)">Rock</button>
    <button onclick="playGame(1)">Scissors</button>
    <button onclick="playGame(2)">Paper</button>
  </div>
  <p id="gameResult" align="center"></p>
  <script>
    const contractAddress = 'YOUR_CONTRACT_ADDRESS'; // Замените на адрес вашего смарт-контракта
    const contractABI = [
      {
        "constant": false,
        "inputs": [
          {
            "name": "_option",
            "type": "uint8"
          }
        ],
        "name": "coinFlip",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": true,
        "stateMutability": "payable",
        "type": "function"
      }
    ];

    let web3 = new Web3(Web3.givenProvider);
    let contractInstance = new web3.eth.Contract(contractABI, contractAddress);
    let betAmount = 0.0001; // Сумма ставки в ETH

    async function playGame() {
      const userChoice = document.getElementById('userChoice').value;
      const options = [0, 1, 2]; // Rock, Scissors, Paper
      if (!options.includes(parseInt(userChoice))) {
        alert("Invalid choice. Choose only 0 (Rock), 1 (Scissors), or 2 (Paper)");
        return;
      }

      const accounts = await ethereum.request({ method: 'eth_requestAccounts' });
      const account = accounts[0];

      try {
        const result = await contractInstance.methods.coinFlip(userChoice).send({ from: account, value: web3.utils.toWei(betAmount.toString(), 'ether') });
        console.log(result);
        displayResult(result.events.GameResult.returnValues.win);
      } catch (error) {
        console.error(error);
        alert("An error occurred while playing the game.");
      }
    }

    function displayResult(win) {
      const resultElement = document.getElementById('gameResult');
      if (win) {
        resultElement.textContent = "Congratulations! You won.";
      } else {
        resultElement.textContent = "Oops! You lost. Try again.";
      }
    }

    window.addEventListener('load', async () => {
      const accounts = await ethereum.request({ method: 'eth_requestAccounts' });
      const account = accounts[0];

      // Получаем текущую сумму ставки из смарт-контракта
      const currentBetAmount = await contractInstance.methods.betAmount().call();
      document.getElementById('betAmount').textContent = web3.utils.fromWei(currentBetAmount, 'ether');
    });
  </script>

  <script src="https://cdn.jsdelivr.net/npm/web3@1.6.0/dist/web3.min.js"></script>
</body>
</html>
